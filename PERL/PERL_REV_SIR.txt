#CGPA CALCULATION :;
$tot=0;
print "enter number of courses :";
$n=<STDIN>;
%dict=();
for($i=0;$i<$n;$i=$i+1){
    print "Enter course code :";
    $course = <STDIN>;
    print "Enter the credits :";
    $credit = <STDIN>;
    print "Enter you marks :";
    $mark = <STDIN>;
    if ($mark>90){
        $grade = 's';
        $point=10;
    }
    elsif ($mark>85 && mark <=90){
        $grade = 'a+';
        $point=9;
    }
    elsif ($mark>75 && mark <=85){
        $grade = 'a';
        $point=8;
    }
    elsif ($mark>65 && mark <=75){
        $grade = 'a';
        $point=7;
    }
    elsif ($mark>55 && mark <=65){
        $grade = 'b';
        $point=6;
    }
    elsif ($mark>45 && mark <=55){
        $grade = 'f';
        $point=0;
    }
    else{
        $grade = 'e';
    }
    $dict{$course}=$grade;
    $tot=$tot+($credit*10);
    $sum=($credit*$point)+$sum;
}

$cgpa=($sum/$tot)*10;
while(($key,$value)= each %dict){
    chomp $key;
    chomp $value;
    print("$key => $value \n");
}
print (" $cgpa \n");

#CGPA CALC :
%gradepoints = ('S' => 10, 'A+' => 9, 'A' => 8, 'B' => 7, 'C' => 6, 'D' => 5, 'F' => 0, 'E' => 0);
%credit = ('S1' => 4, 'S2' => 4, 'S3' => 4);  # Unique keys for each semester

$cgpa = 0;
$tot_credit = 0;
$totmark = 0;

for ($i = 1; $i <= 3; $i++) {  # Change loop condition to iterate from 1 to 3
    print "Enter the mark for Semester $i: ";
    $mark = <STDIN>;
    chomp($mark);

    $tot_credit += $credit{"S$i"};

    if ($mark >= 90) {
        $grade = 'S';
        $totmark += $credit{"S$i"} * $gradepoints{'S'};
    } elsif ($mark < 90 && $mark >= 85) {
        $grade = 'A+';
        $totmark += $credit{"S$i"} * $gradepoints{'A+'};
    } elsif ($mark < 85 && $mark >= 80) {
        $grade = 'A';
        $totmark += $credit{"S$i"} * $gradepoints{'A'};
    } elsif ($mark < 80 && $mark >= 70) {
        $grade = 'B';
        $totmark += $credit{"S$i"} * $gradepoints{'B'};
    } elsif ($mark < 70 && $mark >= 60) {
        $grade = 'C';
        $totmark += $credit{"S$i"} * $gradepoints{'C'};
    } elsif ($mark < 60 && $mark >= 50) {
        $grade = 'D';
        $totmark += $credit{"S$i"} * $gradepoints{'D'};
    } elsif ($mark < 50) {
        $grade = 'F';
        $totmark += $credit{"S$i"} * $gradepoints{'F'};
    } else {
        $grade = 'E';
        $totmark += $credit{"S$i"} * $gradepoints{'E'};
    }
}

$cgpa = ($totmark / ($tot_credit * 10)) * 10;
print "CGPA: $cgpa\n";



#FINDING EUCLIDEAN DISTANCE BETWEEN TWO COORDINATES
open(fh,'a.txt');
@lines=<fh>;
chomp @lines;
print "@lines \n";
$n=@lines;
for($i=0;$i<$n;$i++){
    for($j=0;$j<$n;$j++){
        @p1=split(/ /,$lines[$i]);
        @p2=split(/ /,$lines[$j]);
        $sum=0;
        $d=0;
        $m=@p1;
        for($k=0;$k<$m;$k++){
            $sum=$sum+(($p1[$k]-$p2[$k])**2);
        }
        $d=sqrt($sum);
        print "Distance between $lines[$i] and $lines[$j] is \t : $d. \n";
    }
}
close fh;

#PRIME NUMER :
print "Enter a number :";
$n=<STDIN>;
$flag=1;
for ($i = 2; $i<$n; $i++){
    if (($n%$i)==0){
        $flag=0;
        last;
    }
}
if($flag==1){
    print "Its a Prime Number \n";
}
else{
    print "Its not a prime number \n";
}

#STUDENT.PM :
package student;
sub new{
    my($class,$regno,$name,$dept)=@_;
    $self={"regno"=>@_[1],"name"=>@_[2],"dept"=>@_[3]};
    bless $self,$class;
    return $self;
}
sub regno($object){
    my($object)=@_;
    $regno=$object->{regno};
    print $regno;
}
sub name($object){
    my($object)=@_;
    $name=$object->{name};
    print $name;
}
sub dept($object){
    my($object)=@_;
    $dept=$object->{dept};
    print $dept;
}
1;

PERL.PL:

use lib '/home/gangeshbasker';
use student;
$studentobject=new student(125015174,'Gangesh','CSE');
print $studentobject->regno()."\n";
print $studentobject->name()."\n";
print $studentobject->dept()."\n";



#PRINTING ALL THE LINES
open(fh,'a.txt');
while($line=<fh>){
    print $line;
}
close fh;


#PRINTING THE EVEN NUMBER OF LINES
open(fh,'a.txt');
$n=1;
while($line=<fh>){
    if ($n%2==0){
        print $line;
    }
    $n=$n+1;
}
close fh;


#NUMBER OF TERMS AND CHARACTERS IN A LINE 
open(fh,'a.txt');
$n=1;
while($line=<fh>){
    @t1=split(/ /,$line);
    @t2=split(//,$line);
    $count1=@t1;
    $count2=@t2;
    print "number of terms in line $n = $count1 \n";
    print "number of characters in line $n = $count2 \n";
    $n=$n+1;
}
close fh;


#COUNTING THE LOWERCASE,UPPERCASE, UNDERSCORE AND DOT CHARACTERS IN THE TEXT FILE

open(fh,'a.txt');
$l_count=0;
$u_count=0;
$un_count=0;
$dot_count=0;
while($line=<fh>){
    chomp $line;
    @t=split(//,$line);
    $n=@t;
    for($i=0;$i<$n;$i=$i+1){
        if($t[i]=~m/[a-z]/){
         $l_count++;
        }
        elsif($t[i]=~m/[A-Z]/){
            $u_count++;
        }
        elsif($t[i]=~m/_/){
            $un_count++;
        }
        elsif($t[i]=~m/\./){
            $dot_count++;
        }
    }
    print "$n \n";
}
close fh;
print "count of lower case = $l_count \n";
print "count of upper case = $u_count \n";
print "count of underscore(_) = $un_count \n";
print "count of dots = $dot_count \n";

